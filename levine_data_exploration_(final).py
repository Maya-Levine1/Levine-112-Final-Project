# -*- coding: utf-8 -*-
"""Levine Data Exploration (Final)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KfiNqDXV1IKY_4ADCciYSGioD4OyqGXB

Goals for now


*   We have urban vs rural
*   Get deaths and road miles over time 
*   Graph both deaths and road miles over time 

What basic questions am I trying to answer? 


*   What states have the most mileage? 
*   What states have the most deaths? 
*   What is the association between regions, miles, and deaths over time? 

files
* crash_data (3)
* years (2)
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

crash_data = pd.read_csv("crash_data (3)")
crash_data

"""# Who has most mileage"""

crash_data["TOTAL LANE MILES"].mean()
#okay that's the average

df_indexed = crash_data.set_index("TOTAL LANE MILES").sort_index()
df_indexed
#HI vs Texas, this makes sense

crash_data["TOTAL LANE MILES"].sort_values().plot.bar()
#fairly consistent rise in lane miles, until we get to Cali and texas, which explode--makes some sense, especially texas's dependency on cars
#HI and RI have least which also makes sense

"""# Regional stuff"""

regions=crash_data.groupby("REGION")

ax=regions["TOTAL LANE MILES"].sum().plot.bar()
ax.set_xlabel("REGION")
ax.set_ylabel("MILEAGE")

ax=regions["VMT (Millions)"].sum().plot.bar()
ax.set_xlabel("REGION")
ax.set_ylabel("VMT (Millions)")

ax=regions["Deaths per 100K"].sum().plot.bar()
ax.set_xlabel("REGION")
ax.set_ylabel("DEATHS")

ax=regions["U-TOTAL"].sum().plot.bar()
ax.set_xlabel("REGION")
ax.set_ylabel("URBAN MILEAGE")

#define data
x = np.array(regions["Deaths per 100K"].mean().astype(float))
y = np.array(regions["TOTAL LANE MILES"].mean().astype(float))

#find line of best fit
a, b = np.polyfit(x, y, 1)

#add points to plot
plt.scatter(x, y)

#add line of best fit to plot
plt.plot(x, a*x+b)

#issues with 26 and 50
#define data
for_array=crash_data.drop([26,50])
y = np.array(for_array["Deaths per 100K"].astype(float).dropna())
x = np.array(for_array["TOTAL LANE MILES"].astype(float))

#find line of best fit
a, b = np.polyfit(x, y, 1)

#add points to plot
plt.scatter(x, y)
plt.title("Mileage vs Deaths")
plt.xlabel("MILEAGE")
plt.ylabel("DEATHS PER 100K")

#add line of best fit to plot
plt.plot(x, a*x+b)

#issues with 26 and 50
#define data
for_array=crash_data.drop([26,50])
y = np.array(for_array["Deaths per 100K"].astype(float).dropna())
x = np.array(for_array["VMT (Millions)"].astype(float))

#find line of best fit
a, b = np.polyfit(x, y, 1)

#add points to plot
plt.scatter(x, y)
plt.title("VMT vs Deaths")
plt.xlabel("VMT (Millions)")
plt.ylabel("DEATHS PER 100K")

#add line of best fit to plot
plt.plot(x, a*x+b)

crash_data.iloc[42]
crash_data.iloc[10]

"""# Urban vs Rural miles"""

#define data
x = np.array(for_array["R-TOTAL"].astype(float))
y = np.array(for_array["U-TOTAL"].astype(float))

#find line of best fit
a, b = np.polyfit(x, y, 1)

#add points to plot
plt.scatter(x, y)
plt.title("Urban vs Rural Mileage")
plt.xlabel("RURAL MILEAGE")
plt.ylabel("URBAN MILEAGE")

#add line of best fit to plot
plt.plot(x, a*x+b)

"""# Urban v rural deaths """

cc=crash_data.set_index("STATE").sort_values(by="Deaths per 100K")
cc["Deaths per 100K"].plot(kind='bar',figsize=(12,8))

#df=regions
#ax=df.plot.bar(x="REGION",y="Percent Urban")

urban=np.array(crash_data["Percent Urban"])
rural=np.array(crash_data["Percent Rural"])
df=pd.DataFrame({"Urban":urban,"Rural":rural})
ax=df.plot.bar(stacked=True)
ax.set_xlabel("State (Alphabetical)")
ax.set_ylabel("Percentage")

crash_data.iloc[4]

#df=regions
#ax=df.plot.bar(x="REGION",y="Percent Urban")
urban=np.array(crash_data.iloc[4]["Percent Urban"])
rural=np.array(crash_data.iloc[4]["Percent Rural"])
df=pd.DataFrame({"Urban":urban,"Rural":rural})
ax=df.plot.bar(stacked=True)
ax.set_xlabel("State (Alphabetical)")
ax.set_ylabel("Percentage")

urban=np.array(regions["Percent Urban"].mean())
rural=np.array(regions["Percent Rural"].mean())
index=["Midwest","Northeast","Southeast","Southwest","West"]
df=pd.DataFrame({"Urban":urban,"Rural":rural}, index=index)
ax=df.plot.bar(stacked=True)
ax.set_title("Death by land type")
ax.set_xlabel("Region")
ax.set_ylabel("Percentage")

"""# Time"""

years=pd.read_csv("years (2)")
years

x=np.array(years["Year"])
y1=np.array(years["Deaths"])
y2=np.array(years["Mileage (thousands)"])

#plt.plot(x, y1, color='y')
plt.plot(x, y2, color='r')
plt.title("Mileage Since 1990")
plt.xlabel("Year")
plt.ylabel("Lane Mileage (Thousands)")
plt.show()

x=np.array(years["Year"])
y1=np.array(years["Deaths"]/10)
y2=np.array(years["Mileage (thousands)"])

plt.plot(x, y1, color='y',label="Deaths")
plt.plot(x, y2, color='r',label="Mileage")
plt.title("Mileage/Deaths Since 1990")
plt.xlabel("Year")
plt.ylabel("Lane Mileage(Thousands), Deaths")
plt.legend()
plt.show()

x=np.array(years["Year"])
y1=np.array(years["Deaths"])
y2=np.array(years["Mileage (thousands)"])
y3=np.array(years["Motor vehicles"])
plt.plot(x, y3, color='b',label="Number of vehicles")
plt.plot(x, y1, color='y',label="Deaths")
plt.xlabel("Year")
plt.ylabel("Vehicles/Deaths")
plt.legend()
plt.show()

years["Motor vehicles"]-years["Deaths"]